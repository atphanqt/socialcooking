{
  "name": "chrono-node",
  "description": "A natural language date parser in Javascript",
  "homepage": "http://github.com/berryboy/chrono",
  "repository": {
    "type": "git",
    "url": "https://github.com/berryboy/chrono.git"
  },
  "version": "0.0.3",
  "directories": {
    "parser": "./parser",
    "test-nodeunit": "./test-nodeunit",
    "test-qunit": "./test-qunit"
  },
  "main": "./chrono",
  "readme": "Chrono\n======\n\nA natural language date parser in Javascript.\n\n\n## INSTALLATION\n\n### Node.js\n\n    npm install chrono-node\n\n### Browser\n\n    <script src=\"https://raw.github.com/berryboy/chrono/master/chrono.min.js\"></script>\n\n## USAGE\n\n### Basic\n\nYou can parse strings containing a natural language date using the `chrono.parseDate` or `chrono.parse` method.\n\n    > var chrono = require('chrono-node');\n    \n    > chrono.parseDate('Today'); \n    Thu Aug 23 2012 12:00:00 GMT+0700 (ICT)\n    \n    > chrono.parse('Today'); \n    [ { start: \n         { year: 2012,\n           month: 7,\n           day: 23,\n           hour: undefined,\n           minute: undefined,\n           second: undefined,\n           date: [Function] },\n        startDate: Thu Aug 23 2012 12:00:00 GMT+0700 (ICT),\n        referenceDate: Thu Aug 23 2012 01:17:46 GMT+0700 (ICT),\n        index: 0,\n        text: 'Today',\n        sentence: undefined } ]\n        \n### Reference Date\n\nToday's \"Friday\" is difference from last month's \"Friday\". The meaning of mentioned dates are depended on when they were mentioned. Chrono let you define the reference date using `chrono.parse(text,ref)` and `chrono.parseDate(text,ref)`.    \n\n    > chrono.parseDate('Friday', new Date(2012,7,23)); \n    Fri Aug 24 2012 12:00:00 GMT+0700 (ICT)\n    \n    > chrono.parseDate('Friday', new Date(2012,7,1)); \n    Fri Aug 03 2012 12:00:00 GMT+0700 (ICT)\n\n### Text\n        \nChrono is also designed to handle a long text. `chrono.parse` will return a array of every date mentioned in the input text. `chrono.parseDate` will return the first one.\n  \n    > var text = 'October 7, 2011, of which details were not revealed out of respect to Jobs\\'s family.[239] Apple announced on the same day that they had no plans for a public service, but were encouraging \"well-wishers\" to send their remembrance messages to an email address created to receive such messages.[240] Sunday, October 16, 2011'\n    \n    > chrono.parse(text)\n    [ { start: \n         { year: 2011,\n           month: 9,\n           day: 7,\n           hour: undefined,\n           minute: undefined,\n           second: undefined,\n           date: [Function] },\n        startDate: Fri Oct 07 2011 12:00:00 GMT+0700 (ICT),\n        referenceDate: Thu Aug 23 2012 01:48:37 GMT+0700 (ICT),\n        index: 0,\n        text: 'October 7, 2011',\n        sentence: undefined },\n      { start: \n         { year: 2011,\n           month: 9,\n           day: 16,\n           hour: undefined,\n           minute: undefined,\n           second: undefined,\n           date: [Function] },\n        startDate: Sun Oct 16 2011 12:00:00 GMT+0700 (ICT),\n        referenceDate: Thu Aug 23 2012 01:48:37 GMT+0700 (ICT),\n        index: 297,\n        text: 'Sunday, October 16, 2011',\n        sentence: undefined } ]\n    \n\n\n## EXAMPLES\n\nChrono can parse a number of date and time formats. Following are examples of strings that can be parsed properly.\n\n* yesterday\n* today\n* tomorrow\n* thursday\n* friday 13:00 \n* friday 1pm - saturday 5am\n* next tuesday\n* last night\n* last friday at 20:00\n* tomorrow at 6:45pm\n* 12/1/2012\n* 12 - 13 Jan 2012\n* 12 Jan - 13 Feb 2012\n* Jan 12 - Feb 13\n* 2012-3-12",
  "readmeFilename": "README.md",
  "_id": "chrono-node@0.0.3",
  "dist": {
    "shasum": "83f77b3ef6c9f34dc2e497b440de7f7d794f338c"
  },
  "_from": "chrono-node@*",
  "_resolved": "https://registry.npmjs.org/chrono-node/-/chrono-node-0.0.3.tgz"
}
